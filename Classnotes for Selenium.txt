Selenium 
----------


Classification Automation Tools 
-------------------------------
1. Functional Automation - 

2. Non Functional Automation  

----------------------------

Functional  - QTP(VBscript, JavaScript), UFT, RFT, SilkTest, WinRunner(TSL),VBscript, Rational Robot(SQABasic), Selenium, TestComplete, Renorex(

   Types of Applications -

   Selenium - WebApplicationJava
Python
CSharp
Ruby
JavaScript
Kotlin

Performance - LoadRunner, OpenSTA, RPT, Jmeter, Neoload, Silkperformer, OctoPerf, Appedo/ APM 

Test Management - QualityCenter, ALMQC, QM, JIRA, RTM, STM, ClearQuest, TOSCO, 

What is use of Learn Selenium
------------------------------

1. Language Dependency broken - Python
CSharp
Ruby
JavaScript
Kotlin

2. Open_Source 

3. Android, IOS, Windows, Linux, MAC, Solaris

4. Google Chrome, Mozila Firefox, IE, Edge, Safari, Opera

5. Parallel Execution 

6. Integration of ANT and Maven

7. Generate Reports With help of TestNG


Selenium Limitation 
----------------------

It does not have built in Object Repository like UFT,Renorex to maintain object/elements in centralized location. We can overcome with this limitation using POM Framework.

Selenium Components
-------------------

Selenium IDE
Selenium RC (No longer now)
Selenium WebDriver  - Most Popular
Selenium Gird - 

Selenium WebDriver 
--------------------

What is mean by Selenium WebDriver  ?
------------------------------------

WebDriver is Interface - It contains method declarations (get(),quit(),close())

Selenium automates browser, That's it!

What you do with that power is entirely up to you. 

Any Automation Tool Must have following feature

1. Reporting 
2. Script Maintenance  (Reusability, Code standards, calling features)
3. Object Repository - 
4. Test Suite Maintenance 
5. Data Driven Feature
6. Integration with CI/CD
7. Integration with Test Management Tools

Selenium does not have any feature (By default).

Selenium WebDriver drives the Browser natively.
As user would, either locally or on a remote machine using the Selenium Server,
It marks a leap forward in terms of browser automation.


WebDriver is designed as a simple and more concise programming interface
WebDriver is a Compact Object Oriented API.
It drives the browser Effectively.


interface Bank
{
   float rateOfInterest();
}

Class Citibank implements Bank
{
   public float rateOfInterest()
   {
      return 10.5f;
   }
}

Class ICICI implements Bank
{

   public float rateOfInterest()
   {
    return 12.5f;
    }

Class TestInterface 
{
  public static void main(String[] args)
   {
     Citibank obj = new Citibank();
      System.out.println("ROI:.."+obj.rateOfInterest();

     Bank obj = new Citibank();

}
}
    

WebDriver Implementation in Java
---------------------------------

package webdriverImplementation;

public class ChromeDriver implements WebDriver {

	@Override
	public void close() {
		System.out.println("Chrome Browser Current window Closed..");
		
	}

	@Override
	public void quit() {
		System.out.println("Chrome Browser Session Closed..");
		
	}

	@Override
	public void get() {
		System.out.println("Chrome Browser Opened the application..");
		
	}

	@Override
	public String getTitle() {
		String BrowserTitle = "HelloPetStore";
		System.out.println("Chrome Browser Returned the Title..");
		 return BrowserTitle;
	}

}


package webdriverImplementation;

public class EdgeDriver implements WebDriver {

	@Override
	public void close() {
		System.out.println("Edge Browser Current window Closed..");
		
	}

	@Override
	public void quit() {
		System.out.println("Edge Browser Session Closed..");
		
	}

	@Override
	public void get() {
		System.out.println("Edge Browser Opened the application..");
		
	}

	@Override
	public String getTitle() {
		String BrowserTitle = "HelloPetStore";
		System.out.println(" Edge Browser Returned the Title..");
		 return BrowserTitle;
	}

}


package webdriverImplementation;

public class TestWebDirverImplementation {

	public static void main(String[] args) {
		
		WebDriver driver = new ChromeDriver();
		driver.get();
		System.out.println(driver.getTitle());
		driver.close();
		driver.quit();
		
		WebDriver driver1 = new EdgeDriver();
		driver1.get();
		System.out.println(driver1.getTitle());
		driver1.close();
		driver1.quit();
		 

	}

}


package seleniumexample;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;

public class FirstSeleniumScript {

	public static void main(String[] args) throws InterruptedException
	{
		 WebDriver driver = new ChromeDriver();
		 driver.get("https://petstore.octoperf.com/");
		 //Thread.sleep(5);
		 
		 WebDriver driver1 = new EdgeDriver();
		 driver1.get("https://petstore.swagger.io/");
		 driver.quit();
		 driver1.quit();

	}

}

WebDriver Commands
----------------------

Browser Commands - get(), getTitle(), getCurrentUrl(), getPageSource(), close(), Quit()

Navigation Commands - navigate(), to(), back(), forward(), refresh()

WebElement Commands - clear(), click(), findElement(), findElements(), getCssValue(), getLocation(), getSize(), getText(), isDisplayed, isEnabled, isSelected(), sendKeys(charSequence arg0)


Anukriti.ojha@walmart.com
sanjay.gowda@walmart.com
santhoshnagaraj.vijayakumar@walmart.com
saurav.kumar1@walmart.com
Sunilkumar.s@walmart.com
Shilpi.goel@walmart.com
Maruthi.kumar@walmart.com
saikiranreddy.singir@walmart.com
monica.priyadharshini@walmart.com
Lokesh.patni@walmart.com
Vommi.theja@walmart.com
Vishal.jain0@walmart.com

Mohammed.bashit@walmart.com


https://upgrad1.typeform.com/to/W6XadH5w

Test Automation Business scenario 
---------------------------------
Verify the Landing Page
--------------------------
Testcase 1

1. Navigate to https://petstore.octoperf.com/
2. Verify the URL "https://petstore.octoperf.com/" 
3. Verify the Page Title equals to "JPetStore Demo"
4. Verify the page contains "Welcome to JPetStore 6"
5. Verify that Enter the store link is present
6. Verify the Enter store link is navigating to home page
7. verify that Copyright www.mybatis.org


	package testcases;

import org.openqa.selenium.WebDriver;

import browserimplementation.BrowserConfig;

public class VerifyLandingPage 
{
	

	public static void main(String[] args)
	{
		
		//Browser Implementation 
		// WebDriver driver = new ChromeDriver();
		BrowserConfig bcon;
		WebDriver driver=null;
		bcon = new BrowserConfig();
		//Chrome Instance to local driver object
		driver = bcon.Launch_Chrome();	 
		 
		 driver.get("https://petstore.octoperf.com/");
		 
		 //Assertion 
		 String acURL = driver.getCurrentUrl();
		 String exURL = "https://petstore.octoperf.com/";
		 if(exURL.equals(acURL))
			 System.out.println("URL Matching Testcase Passed");
		 else
			 System.out.println("URL Not Matching Testcase Failed");
		 
		 //Browser session Closed
		 driver.quit();
		 

	}

}


package browserimplementation;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class BrowserConfig {
	
	WebDriver driver;
	
	public WebDriver Launch_Chrome()
	{
		driver = new ChromeDriver();
		return driver;
	}

}

Object Repository

# This is Global Object Repository 
BaseURL=https://petstore.octoperf.com/


ObjectReader

package com.automation.petstore.objectReader;


import java.io.FileReader;
import java.io.IOException;
import java.util.Properties;

public class ObjectReader {
	
	Properties objpro;
	
	public ObjectReader() throws IOException
	{
		String path ="D:\\Clients\\KH\\Walmart\\Automation\\com.automation.petstore\\ObjectRepository\\object.properties";
		FileReader reader = new FileReader(path);
		objpro = new Properties();
		objpro.load(reader);
	}	
	 
	
	public String get_BaseURl()
	{
		return objpro.getProperty("BaseURL");
	}

}


	package testcases;

import java.io.IOException;

import org.openqa.selenium.WebDriver;

import com.automation.petstore.objectReader.ObjectReader;

import browserimplementation.BrowserConfig;

public class VerifyLandingPage 
{
	

	public static void main(String[] args) throws IOException
	{
		
		//Browser Implementation 
		// WebDriver driver = new ChromeDriver();
		BrowserConfig bcon;
		ObjectReader or;
		WebDriver driver=null;
		bcon = new BrowserConfig();
		//Chrome Instance to local driver object
		driver = bcon.Launch_Chrome();
		or = new ObjectReader();
		String URL = or.get_BaseURl();
		System.out.println("The Base URL is..."+URL);
		//Calling the Object Repository Method 
		 driver.get(URL);
		 
		 //Assertion 
		 String acURL = driver.getCurrentUrl();
		 String exURL = "https://petstore.octoperf.com/";
		 if(exURL.equals(acURL))
			 System.out.println("URL Matching Testcase Passed");
		 else
			 System.out.println("URL Not Matching Testcase Failed");
		 
		 
		//Assertion 
		 String acTitle = driver.getTitle();
		 System.out.println(acTitle);
		 String exTitle = "JPetStore Demo";
		 if(exTitle.equals(acTitle))
			 System.out.println("Title Matching Testcase Passed");
		 else
			 System.out.println("Title Not Matching Testcase Failed");
		 //Browser session Closed
		 driver.quit();
		 

	}

}


-------------------------------------------------------------------------------------

	package testcases;

import java.io.IOException;

import org.openqa.selenium.WebDriver;

import com.automation.petstore.objectReader.ObjectReader;

import browserimplementation.BrowserConfig;
import pages.LandingPage;

public class VerifyLandingPage 
{
	

	public static void main(String[] args) throws IOException, InterruptedException
	{
		
		//Browser Implementation 
		// WebDriver driver = new ChromeDriver();
		BrowserConfig bcon;
		ObjectReader or;
		LandingPage lp;
	
		WebDriver driver=null;
		bcon = new BrowserConfig();
		//Chrome Instance to local driver object
		driver = bcon.Launch_Chrome();
		lp = new LandingPage(driver);
		or = new ObjectReader();
		String URL = or.get_BaseURl();
		System.out.println("The Base URL is..."+URL);
		//Calling the Object Repository Method 
		 driver.get(URL);
		 
		 //Assertion 
		 String acURL = lp.verify_URL();
		 String exURL = "https://petstore.octoperf.com/";
		 if(exURL.equals(acURL))
			 System.out.println("URL Matching Testcase Passed");
		 else
			 System.out.println("URL Not Matching Testcase Failed");
		 
		 
		//Assertion 
		 String acTitle = lp.verify_Title();
		 System.out.println(acTitle);
		 String exTitle = "JPetStore Demo";
		 if(exTitle.equals(acTitle))
			 System.out.println("Title Matching Testcase Passed");
		 else
			 System.out.println("Title Not Matching Testcase Failed");
		
		// driver.findElement(By.linkText("Enter the Store")).click();
		 
		 
		 
		 lp.click_EnterStoreLink();
		 Thread.sleep(5);
		 
		 //Browser session Closed
		 driver.quit();
		 

	}

}


//*[@id="Content"]/h2
-----------------------------------------------------------------------------
# This is Global Object Repository 
BaseURL=https://petstore.octoperf.com/
landingpage.enterstore.link=Enter the Store
landingpage.welcomemsg.xpath=//*[@id="Content"]/h2
--------------------------------------------------

package com.automation.petstore.objectReader;


import java.io.FileReader;
import java.io.IOException;
import java.util.Properties;

public class ObjectReader {
	
	Properties objpro;
	
	public ObjectReader() throws IOException
	{
		String path ="D:\\Clients\\KH\\Walmart\\Automation\\com.automation.petstore\\ObjectRepository\\object.properties";
		FileReader reader = new FileReader(path);
		objpro = new Properties();
		objpro.load(reader);
	}		 
	
	public String get_BaseURl()
	{
		return objpro.getProperty("BaseURL");
	}
	
	public String get_EnterStore()
	{
		return objpro.getProperty("landingpage.enterstore.link");
	}
	public String get_WelcomeMsg()
	{
		return objpro.getProperty(get_WelcomeMsg());
	}

}
---------------------------------------------------------------------

package pages;

import java.io.IOException;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import com.automation.petstore.objectReader.ObjectReader;

public class LandingPage 
{
	WebDriver driver;
	ObjectReader or;
	//By enter_store = By.linkText(or.get_EnterStore());
	public LandingPage(WebDriver driver) throws IOException
	{
		this.driver = driver;
		or = new ObjectReader();
	}
	
	public String verify_URL()
	{		
		System.out.println(driver.getCurrentUrl());
		return driver.getCurrentUrl();
	}
	
	public String verify_Title()
	{
		System.out.println(driver.getTitle());
		return driver.getTitle();
	}
	
	public String verify_WelComeText()
	{
		WebElement element = driver.findElement(By.xpath(or.get_WelcomeMsg()));
		System.out.println(element.getText());
		return element.getText();
	}
		
	public void click_EnterStoreLink()
	{
		 //driver.findElement(By.linkText("Enter the Store")).click();
		driver.findElement(By.linkText(or.get_EnterStore()));
	}
	
	public void verify_CopyRightMsg()
	{
		
	}
	
	

}
---------------------------------------------------------------------------
package testcases;

import java.io.IOException;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.automation.petstore.objectReader.ObjectReader;

import browserimplementation.BrowserConfig;
import pages.LandingPage;

public class VerifyLandingPage 
{
	
	BrowserConfig bcon;
	ObjectReader or;
	LandingPage lp;
	WebDriver driver=null;
	
	@BeforeMethod
	public void setUp() throws IOException 
	{
		bcon = new BrowserConfig();
		driver = bcon.Launch_Chrome();
		lp = new LandingPage(driver);
		or = new ObjectReader();
	}
	
	@Test
	public void test_LandingPage() throws IOException, InterruptedException
	{
		
		
		String URL = or.get_BaseURl();
		System.out.println("The Base URL is..."+URL);
		//Calling the Object Repository Method 
		driver.get(URL);
		 
		 //Assertion 
		 String acURL = lp.verify_URL();
		 String exURL = "https://petstore.octoperf.com/";
		 Assert.assertEquals(acURL, exURL);
		 Reporter.log("TestCase Passed..");
		 
		 String  ActwelcomeMessage = lp.verify_WelComeText();
		 String exWelComeMsg = "Welcome to JPetStore 6";
		 Assert.assertEquals(ActwelcomeMessage,exWelComeMsg);
		 Reporter.log("TestCase Passed..");
		 
		//Assertion 
		 String acTitle = lp.verify_Title();
		 System.out.println(acTitle);
		 String exTitle = "JPetStore Demo";
		 Assert.assertEquals(acTitle, exTitle);
		 Reporter.log("TestCase Passed.."); 
		 
		 
		 
		 lp.click_EnterStoreLink();
		 Thread.sleep(5);
		 
		 
		 

	}
	
	@AfterMethod
	public void tearDown()
	{
		//Browser session Closed
		 driver.quit();
	}

}

 /*
      *  Automate the process of opening a browser, navigating to a URL, and interacting with a web page.
      *
      *  1. Open a web browser with an empty URL.
      *  2. Navigate to the specified URL for the CURA Healthcare Service.
      *  3. Click on the "Make Appointment" link on the page.
      *  4. Double-click on the "Make Appointment" link to ensure interaction.
      *  5. Verify that the text of the specified element matches "CURA Healthcare Service".
      *  6. Close the browser after the operations are completed.
      *
      */

Object Repository
---------------------

# This is Global Object Repository 
BaseURL=https://petstore.octoperf.com/
landingpage.enterstore.link=Enter the Store
landingpage.welcomemsg.xpath=//*[@id='Content']/h2
#This is global username and Password
username=mohan
password=mohan


Object Reader Class Code 
---------------------------

package com.automation.petstore.objectReader;


import java.io.FileReader;
import java.io.IOException;
import java.util.Properties;

public class ObjectReader {
	
	Properties objpro;
	
	public ObjectReader() throws IOException
	{
		String path ="D:\\Clients\\KH\\Walmart\\Automation\\com.automation.petstore\\ObjectRepository\\object.properties";
		FileReader reader = new FileReader(path);
		objpro = new Properties();
		objpro.load(reader);
	}		 
	
	public String get_BaseURl()
	{
		return objpro.getProperty("BaseURL");
	}
	
	public String get_EnterStore()
	{		
		return objpro.getProperty("landingpage.enterstore.link");
	}
	public String get_WelcomeMsg()
	{
		return objpro.getProperty("landingpage.welcomemsg.xpath");
	}

}



Login Page Code
-----------------

package pages;

import java.io.IOException;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.testng.Reporter;

import com.automation.petstore.objectReader.ObjectReader;

public class LoginPage {
	
	WebDriver driver;
	ObjectReader or;
	//By enter_store = By.linkText(or.get_EnterStore());
	public LoginPage(WebDriver driver) throws IOException
	{
		this.driver = driver;
		or = new ObjectReader();
	}
	
	public void loginToSite() throws InterruptedException
	{
		Thread.sleep(5);;
		driver.findElement(By.linkText("Sign In")).click();
		driver.findElement(By.name("username")).sendKeys("mohan");
		driver.findElement(By.name("password")).clear();
		driver.findElement(By.name("password")).sendKeys("mohan");
		driver.findElement(By.name("signon")).click();
		String actualLink = driver.findElement(By.linkText("Sign Out")).getText();
		String expectedLink = "Sign Out";
		if(expectedLink.equals(actualLink))
			Reporter.log("Login Sucessful Testcase Passed");
		else
			Reporter.log("Not a Valid Login Testcase Failed");	
		
	}

}

--------------------------------------------------------------------------------------

Verify Login Page
---------------

package testcases;

import java.io.IOException;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.automation.petstore.objectReader.ObjectReader;

import browserimplementation.BrowserConfig;
import pages.LandingPage;
import pages.LoginPage;

public class VerifyLogin {

	BrowserConfig bcon;
	ObjectReader or;
	LandingPage lp;
	WebDriver driver=null;
	LoginPage lop;

	@BeforeMethod
	public void setUp() throws IOException 
	{
		bcon = new BrowserConfig();
		driver = bcon.Launch_Chrome();
		lp = new LandingPage(driver);
		lop = new LoginPage(driver);
		or = new ObjectReader();
	}

	@Test
	public void LoginwithValidData() throws InterruptedException 
	{

		String URL = or.get_BaseURl();
		System.out.println("The Base URL is..."+URL);
		//Calling the Object Repository Method 
		driver.get(URL);
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(5));

		//Assertion 
		String acURL = lp.verify_URL();
		String exURL = "https://petstore.octoperf.com/";
		Assert.assertEquals(acURL, exURL);
		Reporter.log("TestCase Passed..");

		String  ActwelcomeMessage = lp.verify_WelComeText();
		String exWelComeMsg = "Welcome to JPetStore 6";
		Assert.assertEquals(ActwelcomeMessage,exWelComeMsg);
		Reporter.log("TestCase Passed..");

		//Assertion 
		String acTitle = lp.verify_Title();
		System.out.println(acTitle);
		String exTitle = "JPetStore Demo";
		Assert.assertEquals(acTitle, exTitle);
		Reporter.log("TestCase Passed.."); 		 

		 
		driver.findElement(By.linkText("Enter the Store")).click();
		System.out.println("Click Enter store link TestCasePassed");
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(5));


		lop.loginToSite();
		Reporter.log("Login Sucessful");
		System.out.println("Login Sucessful");


	}
	
	@AfterMethod
	public void tearDown()
	{
		driver.quit();
	}
}
----------------------------------------------------------------------------

Data Driven Framework Implementation Using Data Provider 

package testcases;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class DDT_DataProvider_Login
{
	WebDriver driver;
	
	@BeforeMethod
	public void setUp()
	{
		 driver = new ChromeDriver();
	}
		
  @Test(dataProvider = "dp")
  public void LoginToSite(String uname, String pwd) 
  {
	 
	  driver.get("https://petstore.octoperf.com/");
	  driver.findElement(By.linkText("Enter the Store")).click();
	  driver.findElement(By.linkText("Sign In")).click();
	  driver.findElement(By.name("username")).sendKeys(uname);
	  driver.findElement(By.name("password")).clear();
	  driver.findElement(By.name("password")).sendKeys(pwd);
	  driver.findElement(By.name("signon")).click();
	  String actulLink = driver.findElement(By.linkText("Sign Out")).getText();
	  String exLink = "Sign Out";
	  
	  if(exLink.equals(actulLink))
	  {
		  System.out.println("TestCase Passed");
	  	  Reporter.log("Sucessful Login");
	  	  driver.findElement(By.linkText("Sign Out")).click();
	  }
	  else
	  {
		  System.out.println("TestCase Failed");
			Reporter.log("Un Sucessful Login");	
			driver.quit();
	  }
	  
	   
	  			
				
	  //Assert.assertEquals(actulLink, exLink);
	 // System.out.println("TestCase Passed");
  }
  
  	@AfterMethod
	public void tearDown()
	{
		driver.quit();
	}

  @DataProvider
  public Object[][] dp() {
    return new Object[][] {
      new Object[] { "mohan", "mohan" },
      new Object[] { "mohan1", "mohan1" },
      new Object[] { "mohan2", "mohan2" },
      new Object[] { "mohan3", "mohan2" },
    };
  }
}


XSSFWorkbook  - Refer the XL WorkBook
XSSFSheet - Refers the sheetname 
XSSFRow - Refers Row
XSSFCell -Refers Coloumn


<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.automation</groupId>
  <artifactId>com.automation.petstore</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <dependencies>
  <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.28.1</version>
</dependency>
<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi</artifactId>
    <version>5.3.0</version>
</dependency>
<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml</artifactId>
    <version>5.3.0</version>
</dependency>

  </dependencies>
</project>


ExcelReader Program
---------------------

package excelutility;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ExcelReader 
{
	XSSFWorkbook workbook;
	XSSFSheet sheet;
	FileInputStream fs;
	
	public ExcelReader(String filepath) throws IOException
	{
		try 
		{
			fs = new FileInputStream(filepath);
			workbook = new XSSFWorkbook(fs);
		} 
		catch (FileNotFoundException e)
		{			 
			e.printStackTrace();
		}
	}
	public String getData(int sheetnumber, int row, int col)
	{
		sheet = workbook.getSheetAt(sheetnumber);
		String data = sheet.getRow(row).getCell(col).getStringCellValue();
		return data;
	}
	public int getRowCount(int sheetindex)
	{
		int rowCount = workbook.getSheetAt(sheetindex).getLastRowNum();
		rowCount = rowCount + 1;
		return rowCount;
	}	

}

------------------------------------------------------

package testcases;

import java.io.IOException;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import excelutility.ExcelReader;

public class LoginTestWIthExcel 
{  
	WebDriver driver;
	ExcelReader erobj;
	@BeforeMethod
	public void setUp()
	{
		 driver = new ChromeDriver();
	   
	}
	
  @Test
  public void testLoginWithExcel() throws IOException 
  {
	  driver.get("https://petstore.octoperf.com/");
	  driver.findElement(By.linkText("Enter the Store")).click();
	  String path = "D:\\Clients\\KH\\Walmart\\Automation\\com.automation.petstore\\DataSource\\TestDataSet.xlsx";
	  erobj = new ExcelReader(path);
	  int rowcount = erobj.getRowCount(0);
	  for(int i=0;i<rowcount;i++)	  {
	 
	  driver.findElement(By.linkText("Sign In")).click();
	  driver.findElement(By.name("username")).sendKeys(erobj.getData(0, i, 0));
	  System.out.println(erobj.getData(0, i, 0));
	  driver.findElement(By.name("password")).clear();
	  driver.findElement(By.name("password")).sendKeys(erobj.getData(0, i, 1));
	  System.out.println(erobj.getData(0, i, 1));
	  driver.findElement(By.name("signon")).click();
	  driver.findElement(By.linkText("Sign Out")).click();   
	  }   
	  
	  
  }
  
  @AfterMethod
  public void tearDown()
  {
	  driver.quit();
  }
}


TestSuite Execution 
---------------------

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Default suite" guice-stage="DEVELOPMENT">
  <test thread-count="5" name="Default test" verbose="2">
    <classes>
      <class name="testcases.VerifyLandingPage"/>
      <class name="testcases.VerifyLogin"/>
      <class name="testcases.LoginTestWIthExcel"/>
      <class name="testcases.DDT_DataProvider_Login"/>
    </classes>
  </test> <!-- Default test -->
</suite> <!-- Default suite -->


Extent Report Implementation 
---------------------------
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.automation</groupId>
  <artifactId>com.automation.petstore</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <dependencies>
  <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.28.1</version>
</dependency>
<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi</artifactId>
    <version>5.3.0</version>
</dependency>
<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml</artifactId>
    <version>5.3.0</version>
</dependency>
<!-- https://mvnrepository.com/artifact/com.aventstack/extentreports -->
<dependency>
    <groupId>com.aventstack</groupId>
    <artifactId>extentreports</artifactId>
    <version>5.1.2</version>
</dependency>


  </dependencies>
</project>


Selenium Extent Report Code 
-------------------------------
package testcases;

import static org.testng.Assert.assertTrue;

import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;

public class ReporterTest 
{
	ExtentReports extent;
	ExtentSparkReporter spark;
	
	@Test
	public void testcase1()
	{
		ExtentTest test = extent.createTest("User Verifing the Applicaiton URL...");
		test.log(Status.PASS, "Verify URL Testcase passed");
		test.assignAuthor("Mohan").assignDevice("Chrome").assignDevice("Windows");		
		
	}
	
	@Test
	public void testcase2()
	{
		ExtentTest test = extent.createTest("User Verifing the Applicaiton Title...");
		test.log(Status.PASS, "Verify Title Testcase passed");
		test.assignAuthor("Mohan").assignDevice("Chrome").assignDevice("Windows");			
	}
	
	@Test
	public void testcase3()
	{
		ExtentTest test = extent.createTest("User Verifing the Welcome Message...");
		
		try
		{
			assertTrue(false);
		}
		catch(AssertionError e) 
		{
			test.log(Status.FAIL, "Testcase 3 Failed, Due to Assertion Error"+e.getMessage());
			System.out.println("Hello this Assertion error block");
			test.assignAuthor("Mohan").assignDevice("Chrome").assignDevice("Windows");	
		}
			
	}
	
	@BeforeTest
	public void setUp()
	{
		  extent = new ExtentReports();
		  spark = new ExtentSparkReporter("target/Spark.html");
		extent.attachReporter(spark);
	}
	@AfterTest
	public void tearDown()
	{
		extent.flush();
	}

}

http://demoaut.katalon.com/


 /*
      *  Automate the process of navigating a pet store website and adding items to the cart.
      *
      *  1. Open a web browser and navigate to the specified pet store URL.
      *  2. Click on the "Enter the Store" link to access the main page.
      *  3. Click on the "Sign In" link to log into the store.
      *  4. Click on various product links to view details and add them to the cart.
      *  5. Proceed to checkout after adding each product to the cart.
      *  6. Close the web browser after completing the actions.
      *
      */


WebUI.openBrowser('')

WebUI.navigateToUrl('https://petstore.octoperf.com/')

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_Enter the Store'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_Sign In'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/img'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_FI-SW-01'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_EST-1'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_Add to Cart'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_Proceed to Checkout'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/img_1'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_FL-DSH-01'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_EST-14'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_Add to Cart_1'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_Proceed to Checkout'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/img_1_2'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_AV-CB-01'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_EST-18'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_Add to Cart_1_2'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_Proceed to Checkout'))

WebUI.closeBrowser()



    /*
      *  Automate the process of navigating a pet store website and adding items to the cart.
      *
      *  1. Open a web browser and navigate to the specified pet store URL.
      *  2. Click on the "Enter the Store" link to access the main page.
      *  3. Click on the "Sign In" link to log into the store.
      *  4. Click on various product links to view details and add them to the cart.
      *  5. Proceed to checkout after adding each product to the cart.
      *  6. Close the web browser after completing the actions.
      *
      */

// Open a web browser and navigate to the specified pet store URL
WebUI.openBrowser('https://petstore.octoperf.com/')

// Click on the "Enter the Store" link to access the main page
WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_Enter the Store'))

WebUI.click(findTestObject('Object Repository/ProductNavigation/Page_JPetStore Demo/a_Sign In'))

WebUI.delay(4)
// Close the web browser after completing the actions
WebUI.closeBrowser()




WebUI.openBrowser('')

WebUI.navigateToUrl('https://petstore.octoperf.com/')

WebUI.verifyElementPresent(findTestObject('Object Repository/LandingPage/Page_JPetStore Demo/a_Enter the Store'), 0)

WebUI.verifyElementText(findTestObject('Object Repository/LandingPage/Page_JPetStore Demo/a_Enter the Store'), 'Enter the Store')

WebUI.click(findTestObject('Object Repository/LandingPage/Page_JPetStore Demo/a_Enter the Store'))

WebUI.closeBrowser()







































testsigma44@gmail.com
Redrum@2025

7700068933
































